["^ ","~:zip","~","~:db",["^ ","~:version","0.1.14-SNAPSHOT-<<Inserted By Github Actions>>\n","~:options",["^ ","~:visr-defaults",["^ "],"~:show-editors",true,"~:insert-close",true,"~:enable-drag-and-drop",true,"~:line-numbers",true,"~:font-size",12,"~:orientation","horizontal","~:keymap","sublime","~:theme","material","~:line-wrapping",false,"~:run-functions",["main"],"~:autocomplete","manual","~:tab-behavior","auto"],"~:current",0,"~:folder","/files/test","~:buffers",[["^ ","^B","/files/test","~:file","p1.cljs","~:changed?",true,"~:input","~^{:editor test.core/Board :show-visr true :show-text false}(test.core/Board+elaborate {:width \"5\",\n :height \"4\",\n :cells\n {{:q 3, :r 0} {:tag \"taken\"},\n  {:q 2, :r 0} {:tag \"taken\"},\n  {:q 0, :r 3} {:tag \"taken\"},\n  {:q 4, :r 2} {:tag \"taken\"},\n  {:q 3, :r 1}\n  {:tag \"player\", :player 1},\n  {:q 2, :r 1} {:tag \"taken\"}},\n :players\n {:count 1,\n  :players {1 {:cell {:q 3, :r 1}}}}}\n)","~:output","","~:split","99.98%","~:cursor",null,"~:scroll",["^ "]]],"~:fs",["^ "],"~:deps",["^ ","~i1631848291392",["^ ","~:name","react-hexgrid","^2","","~:url",""]],"~:menu",[]]]