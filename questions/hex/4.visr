["^ ","~:zip","~","~:db",["^ ","~:version","0.1.14-SNAPSHOT-<<Inserted By Github Actions>>\n","~:options",["^ ","~:visr-defaults",["^ "],"~:show-editors",true,"~:insert-close",true,"~:enable-drag-and-drop",true,"~:line-numbers",true,"~:font-size",12,"~:orientation","horizontal","~:keymap","sublime","~:theme","material","~:line-wrapping",false,"~:run-functions",["main"],"~:autocomplete","auto","~:tab-behavior","auto"],"~:current",0,"~:folder","/files/test","~:buffers",[["^ ","^B","/files/test","~:file","p4.cljs","~:changed?",true,"~:input","~^{:editor test.core/Board :show-visr true :show-text false}(test.core/Board+elaborate {:message \"Endless Possibility\",\n :width \"5\",\n :height \"7\",\n :cells\n {{:q 0, :r 6}\n  {:tag \"player\", :player 1},\n  {:q 4, :r 0}\n  {:tag \"player\", :player 2}},\n :players\n {:count 2,\n  :players\n  {1 {:cell {:q 0, :r 6}},\n   2 {:cell {:q 4, :r 0}}}}}\n)","~:output","","~:split","100.00%","~:cursor",null,"~:scroll",["^ "]]],"~:fs",["^ "],"~:deps",["^ ","~i1631848291392",["^ ","~:name","react-hexgrid","^2","","~:url",""]],"~:menu",[]]]